version: '3.8'

services:
  db:
    image: postgis/postgis:15-3.3
    container_name: geoapi_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-geoapi}
      POSTGRES_USER: ${POSTGRES_USER:-geoapi_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password_here}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-geoapi_user} -d ${POSTGRES_DB:-geoapi}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - geoapi_network

  web:
    build: .
    container_name: geoapi_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-geoapi}
      - POSTGRES_USER=${POSTGRES_USER:-geoapi_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_secure_password_here}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-your-super-secret-key-change-this-in-production}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      - TIME_ZONE=${TIME_ZONE:-UTC}
      - LANGUAGE_CODE=${LANGUAGE_CODE:-en-us}
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - geoapi_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  geoapi_network:
    driver: bridge 